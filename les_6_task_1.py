
__author__ = 'AlexNik'

#1. Подсчитать, сколько было выделено памяти под переменные в ранее разработанных
# программах в рамках первых трех уроков. Проанализировать результат и
# определить программы с наиболее эффективным использованием памяти.

# Примечание: По аналогии с эмпирической оценкой алгоритмов идеальным решением будет:
# ● выбрать хорошую задачу, которую имеет смысл оценивать по памяти;
# ● написать 3 варианта кода (один у вас уже есть);
# ● проанализировать 3 варианта и выбрать оптимальный;
# ● результаты анализа (количество занятой памяти в вашей среде разработки)
# вставить в виде комментариев в файл с кодом. Не забудьте указать версию
# и разрядность вашей ОС и интерпретатора Python;
# ● написать общий вывод: какой из трёх вариантов лучше и почему.
# Надеемся, что вы не испортили программы, добавив в них множество sys.getsizeof после каждой переменной, а проявили творчество, фантазию и создали универсальный код для замера памяти.
import sys


def check_size(list):
    result_size = 0
    for x in list:
        result_size += sys.getsizeof(x)
        if hasattr(x, '__iter__'):
            if hasattr(x, 'items'):
                for key, value in x.items():
                    check_size(key)
                    check_size(value)
            elif not isinstance(x, str):
                for item in x:
                    check_size(item)
    print(f'Общий объем памяти для хранения в переменных значений {list} составил {result_size}')

# Задача для анализа Урок 1: Найти сумму цифр трехзначного числа, которое вводит пользователь.

user_number = input("Введите произвольное положительное трехзначное целое число: ")
CONST_FOR_VERSION = user_number


#Версия 1
user_num = int(CONST_FOR_VERSION)
n1 = user_num % 10
user_num = user_num // 10
n2 = user_num % 10
n3 = user_num // 10
user_sum = n1 + n2 + n3
#print(f'Сумма цифр равна: {user_sum}')
check_size([user_num, n1, n2, n3, user_sum])
# Для числа 123 объем памяти для хранения переменных равен 140

#Версия 2
user_sum = 0
user_num = CONST_FOR_VERSION
for x in user_num:
    user_sum += int(x)
#print(f'Сумма цифр равна: {user_sum}')
check_size([user_num, user_sum, x])
# Для числа 123 объем памяти для хранения переменных равен 130 (уменьшено количество переменных и объем памяти для их хранения посредством применения цикла)

#Версия 3
user_sum = 0
user_num = int(CONST_FOR_VERSION)
for x in str(user_num):
    user_sum += int(x)
#print(f'Сумма цифр равна: {user_sum}')
check_size([user_num, user_sum, x])
# Для числа 123 объем памяти для хранения переменных равен 106 (сокращен объем памяти для хранения переменной user_num)

#Версия 4
user_num = int(CONST_FOR_VERSION)
user_sum = user_num // 100 + user_num % 10 + (user_num // 10) % 10
#print(f'Сумма цифр равна: {user_sum}')
check_size([user_num, user_sum])
# Для числа 123 объем памяти для хранения переменных равен 56 (исключены промежуточные переменные - наиболее эффективное использование памяти)
